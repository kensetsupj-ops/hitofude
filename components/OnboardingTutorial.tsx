'use client';

import { useState, useEffect } from 'react';
import { Guide } from '@/lib/types';

interface OnboardingTutorialProps {
  guide: Guide;
  onClose: () => void;
}

const steps = [
  {
    id: 'welcome',
    title: 'üöö „Å≤„Å®„Åµ„ÅßÊ°àÂÜÖÂõ≥„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ',
    content: 'Âª∫Ë®≠ÁèæÂ†¥„ÅÆÊê¨ÂÖ•ÁµåË∑ØÂõ≥„ÇíÁ∞°Âçò„Å´‰ΩúÊàê„ÉªÂÖ±Êúâ„Åß„Åç„Çã„ÉÑ„Éº„É´„Åß„Åô„ÄÇ\n\n3„Çπ„ÉÜ„ÉÉ„Éó„ÅßÁµåË∑ØÂõ≥„Çí‰ΩúÊàê„Åó„Åæ„Åó„Çá„ÅÜÔºö\n‚ë† ‰ΩèÊâÄÂÖ•Âäõ ‚Üí ‚ë° Âú∞Âõ≥„Å´ÊèèÁîª ‚Üí ‚ë¢ Âç∞Âà∑„ÉªÂÖ±Êúâ',
    target: null,
    action: null
  },
  {
    id: 'sidebar-info',
    title: '„Çπ„ÉÜ„ÉÉ„Éó 1: Âè≥ÂÅ¥„ÅßÊ°à‰ª∂ÊÉÖÂ†±„ÇíÂÖ•Âäõ',
    content: 'Âè≥ÂÅ¥„ÅÆ„Çµ„Ç§„Éâ„Éê„Éº„Åß„ÄÅÊ°à‰ª∂Âêç„Éª‰ΩèÊâÄ„Éª„Çπ„Ç±„Ç∏„É•„Éº„É´„Å™„Å©„ÇíÂÖ•Âäõ„Åó„Åæ„Åô„ÄÇ\n\nÁâπ„Å´„ÄåÁèæÂ†¥‰ΩèÊâÄ„Äç„ÅØÂøÖÈ†à„Åß„ÅôÔºÅ\n‰ΩèÊâÄ„ÇíÂÖ•Âäõ„Åó„Å¶Enter„Ç≠„Éº„ÇíÊäº„Åô„Å®„ÄÅÂú∞Âõ≥„ÅåËá™ÂãïÁöÑ„Å´„Åù„ÅÆÂ†¥ÊâÄ„Å´ÁßªÂãï„Åó„Åæ„Åô„ÄÇ',
    target: '.sidebar',
    action: null
  },
  {
    id: 'address',
    title: '„Çπ„ÉÜ„ÉÉ„Éó 1-1: ÁèæÂ†¥‰ΩèÊâÄ„ÇíË®≠ÂÆö',
    content: 'ÁèæÂ†¥‰ΩèÊâÄÊ¨ÑÔºàÈªÑËâ≤„ÅÆËÉåÊôØÔºâ„Å´‰ΩèÊâÄ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n\n‰æã: Êù±‰∫¨ÈÉΩÂçÉ‰ª£Áî∞Âå∫‰∏∏„ÅÆÂÜÖ1-1-1\n\nEnter„Ç≠„Éº„Åæ„Åü„ÅØüîç„Éú„Çø„É≥„ÅßÂú∞Âõ≥„ÅåÁßªÂãï„Åó„Åæ„Åô„ÄÇ',
    target: '.address-group',
    action: 'focus-address'
  },
  {
    id: 'drawing',
    title: '„Çπ„ÉÜ„ÉÉ„Éó 2: ÁµåË∑Ø„ÇíÊèèÁîª',
    content: '„ÉÑ„Éº„É´„Éê„Éº„Åã„ÇâÁü¢Âç∞„ÇÑÂõ≥ÂΩ¢„ÇíÈÅ∏„Çì„Åß„ÄÅÂú∞Âõ≥‰∏ä„Å´Êê¨ÂÖ•ÁµåË∑Ø„ÇÑÈáçË¶Å„Å™„Éù„Ç§„É≥„Éà„ÇíÊèè„Åç„Åæ„Åô„ÄÇ\n\n„ÉªÁü¢Âç∞ÔºöÈÄ≤Ë°åÊñπÂêë„ÇíÁ§∫„Åô\n„ÉªÂÜÜÔºöÊê¨ÂÖ•Âè£„ÇÑ„Éù„Ç§„É≥„Éà„ÇíÂõ≤„ÇÄ\n„Éª„ÉÜ„Ç≠„Çπ„ÉàÔºöÊ≥®ÊÑè‰∫ãÈ†Ö„ÇíË®òÂÖ•\n\n„Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„Éà: A=Áü¢Âç∞„ÄÅC=ÂÜÜ„ÄÅT=„ÉÜ„Ç≠„Çπ„Éà',
    target: '.toolbar',
    action: null
  },
  {
    id: 'pages',
    title: '„Çπ„ÉÜ„ÉÉ„Éó 2-1: Ë©≥Á¥∞Âõ≥„Å®Âë®Ëæ∫Âõ≥',
    content: '„ÉÑ„Éº„É´„Éê„ÉºÂ∑¶ÂÅ¥„Åß„ÄåË©≥Á¥∞Âõ≥„Äç„Å®„ÄåÂë®Ëæ∫Âõ≥„Äç„ÇíÂàá„ÇäÊõø„Åà„Çâ„Çå„Åæ„Åô„ÄÇ\n\n„ÉªË©≥Á¥∞Âõ≥ÔºöÁèæÂ†¥‰ªòËøë„ÅÆÊã°Â§ßÂõ≥\n„ÉªÂë®Ëæ∫Âõ≥ÔºöÂ∫ÉÂüü„ÅÆÈÄ≤ÂÖ•ÁµåË∑ØÂõ≥\n\n‰∏°Êñπ„Å´ÊèèÁîª„Åó„Å¶„ÄÅÂàÜ„Åã„Çä„ÇÑ„Åô„ÅÑÁµåË∑ØÂõ≥„Çí‰Ωú„Çä„Åæ„Åó„Çá„ÅÜÔºÅ',
    target: '.page-tabs',
    action: null
  },
  {
    id: 'share',
    title: '„Çπ„ÉÜ„ÉÉ„Éó 3: Âç∞Âà∑„ÉªÂÖ±Êúâ',
    content: '„ÄåÂç∞Âà∑„Éó„É¨„Éì„É•„Éº„Äç„Éú„Çø„É≥„ÅßA4Ê®™Âêë„Åç„ÅÆPDF„ÇíÁîüÊàê„Åß„Åç„Åæ„Åô„ÄÇ\n\n„ÄåURL„Ç≥„Éî„Éº„Äç„Åß„É™„É≥„ÇØ„ÇíÂÖ±Êúâ„Åô„Çå„Å∞„ÄÅÂçîÂäõ‰ºöÁ§æ„ÇÑ„Éâ„É©„Ç§„Éê„Éº„Å´Á∞°Âçò„Å´ÊÉÖÂ†±„ÇíÂÖ±Êúâ„Åß„Åç„Åæ„Åô„ÄÇ\n\n„Äå‰øùÂ≠ò„Äç„Éú„Çø„É≥„ÅßJSON„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶‰øùÂ≠ò„Åó„ÄÅÂæå„Åã„ÇâË™≠„ÅøËæº„ÇÄ„Åì„Å®„ÇÇ„Åß„Åç„Åæ„Åô„ÄÇ',
    target: '.print-button',
    action: null
  },
  {
    id: 'complete',
    title: '‚ú® Ê∫ñÂÇôÂÆå‰∫ÜÔºÅ',
    content: '„Åì„Çå„ÅßÂü∫Êú¨ÁöÑ„Å™‰Ωø„ÅÑÊñπ„ÅØÂÆåÁíß„Åß„ÅôÔºÅ\n\n„Åï„Å£„Åù„ÅèÊê¨ÂÖ•ÁµåË∑ØÂõ≥„Çí‰ΩúÊàê„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ\n\nÂõ∞„Å£„ÅüÊôÇ„ÅØ„ÄÅÂè≥ÂÅ¥„ÅÆ„Çµ„Ç§„Éâ„Éê„Éº„Åã„ÇâÂßã„ÇÅ„Çã„Å®ÂàÜ„Åã„Çä„ÇÑ„Åô„ÅÑ„Åß„Åô„Çà„ÄÇ',
    target: null,
    action: null
  }
];

export default function OnboardingTutorial({ guide, onClose }: OnboardingTutorialProps) {
  const [currentStep, setCurrentStep] = useState(0);
  const [isMinimized, setIsMinimized] = useState(false);

  useEffect(() => {
    // „Éè„Ç§„É©„Ç§„ÉàÂØæË±°Ë¶ÅÁ¥†„Å´„ÇØ„É©„Çπ„ÇíËøΩÂä†
    const step = steps[currentStep];
    if (step.target) {
      const element = document.querySelector(step.target);
      if (element) {
        element.classList.add('tutorial-highlight');

        // „Çπ„ÇØ„É≠„Éº„É´„Åó„Å¶Ë¶ÅÁ¥†„ÇíË°®Á§∫
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    }

    // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
    return () => {
      document.querySelectorAll('.tutorial-highlight').forEach(el => {
        el.classList.remove('tutorial-highlight');
      });
    };
  }, [currentStep]);

  const handleNext = () => {
    if (currentStep < steps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      onClose();
    }
  };

  const handlePrevious = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleSkip = () => {
    onClose();
  };

  const step = steps[currentStep];

  if (isMinimized) {
    return (
      <div className="tutorial-minimized">
        <button
          onClick={() => setIsMinimized(false)}
          className="tutorial-restore-btn"
        >
          üí° „ÉÅ„É•„Éº„Éà„É™„Ç¢„É´„ÇíÂÜçÈñã
        </button>
        <button
          onClick={onClose}
          className="tutorial-close-btn"
        >
          √ó
        </button>

        <style jsx>{`
          .tutorial-minimized {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 8px;
            padding: 10px 16px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            display: flex;
            align-items: center;
            gap: 8px;
            z-index: 9999;
          }

          .tutorial-restore-btn {
            padding: 6px 14px;
            background: rgba(255, 255, 255, 0.95);
            color: #667eea;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 13px;
            font-weight: 600;
            transition: all 0.2s ease;
          }

          .tutorial-restore-btn:hover {
            background: white;
            transform: translateY(-1px);
          }

          .tutorial-close-btn {
            width: 28px;
            height: 28px;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 18px;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
          }

          .tutorial-close-btn:hover {
            background: rgba(255, 255, 255, 0.3);
          }
        `}</style>
      </div>
    );
  }

  return (
    <>
      <div className="tutorial-overlay">
        <div className="tutorial-modal">
          <div className="tutorial-header">
            <h3>{step.title}</h3>
            <div className="tutorial-actions">
              <button
                onClick={() => setIsMinimized(true)}
                className="tutorial-minimize-btn"
                title="ÊúÄÂ∞èÂåñ"
              >
                _
              </button>
              <button
                onClick={handleSkip}
                className="tutorial-close-btn"
                title="Èñâ„Åò„Çã"
              >
                √ó
              </button>
            </div>
          </div>

          <div className="tutorial-content">
            <p>{step.content}</p>
          </div>

          <div className="tutorial-footer">
            <div className="tutorial-progress">
              <span>„Çπ„ÉÜ„ÉÉ„Éó {currentStep + 1} / {steps.length}</span>
              <div className="progress-bar">
                <div
                  className="progress-fill"
                  style={{ width: `${((currentStep + 1) / steps.length) * 100}%` }}
                />
              </div>
            </div>

            <div className="tutorial-buttons">
              {currentStep > 0 && (
                <button
                  onClick={handlePrevious}
                  className="tutorial-btn tutorial-btn-secondary"
                >
                  ‚Üê Ââç„Å∏
                </button>
              )}
              <button
                onClick={handleSkip}
                className="tutorial-btn tutorial-btn-skip"
              >
                „Çπ„Ç≠„ÉÉ„Éó
              </button>
              <button
                onClick={handleNext}
                className="tutorial-btn tutorial-btn-primary"
              >
                {currentStep < steps.length - 1 ? 'Ê¨°„Å∏ ‚Üí' : 'Âßã„ÇÅ„ÇãÔºÅ'}
              </button>
            </div>
          </div>
        </div>
      </div>

      <style jsx>{`
        .tutorial-overlay {
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: rgba(0, 0, 0, 0.6);
          backdrop-filter: blur(2px);
          display: flex;
          align-items: center;
          justify-content: center;
          z-index: 10000;
          animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
          from { opacity: 0; }
          to { opacity: 1; }
        }

        .tutorial-modal {
          background: white;
          border-radius: 12px;
          width: 90%;
          max-width: 560px;
          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
          animation: slideUp 0.3s ease;
        }

        @keyframes slideUp {
          from {
            transform: translateY(20px);
            opacity: 0;
          }
          to {
            transform: translateY(0);
            opacity: 1;
          }
        }

        .tutorial-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 20px 24px;
          border-bottom: 2px solid #f0f0f0;
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          border-radius: 12px 12px 0 0;
        }

        .tutorial-header h3 {
          margin: 0;
          font-size: 19px;
          font-weight: bold;
          color: white;
          text-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }

        .tutorial-actions {
          display: flex;
          gap: 4px;
        }

        .tutorial-minimize-btn,
        .tutorial-close-btn {
          width: 32px;
          height: 32px;
          background: rgba(255, 255, 255, 0.2);
          border: none;
          cursor: pointer;
          font-size: 18px;
          color: white;
          display: flex;
          align-items: center;
          justify-content: center;
          border-radius: 6px;
          transition: all 0.2s ease;
        }

        .tutorial-minimize-btn:hover,
        .tutorial-close-btn:hover {
          background: rgba(255, 255, 255, 0.3);
        }

        .tutorial-content {
          padding: 32px 24px;
          min-height: 140px;
        }

        .tutorial-content p {
          margin: 0;
          font-size: 15px;
          line-height: 1.7;
          color: #333;
          white-space: pre-line;
        }

        .tutorial-footer {
          padding: 20px 24px;
          border-top: 2px solid #f0f0f0;
          background: #fafafa;
          border-radius: 0 0 12px 12px;
        }

        .tutorial-progress {
          margin-bottom: 16px;
        }

        .tutorial-progress span {
          font-size: 13px;
          color: #666;
          font-weight: 500;
        }

        .progress-bar {
          margin-top: 8px;
          height: 6px;
          background: #e0e0e0;
          border-radius: 3px;
          overflow: hidden;
        }

        .progress-fill {
          height: 100%;
          background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
          transition: width 0.3s ease;
          border-radius: 3px;
        }

        .tutorial-buttons {
          display: flex;
          gap: 10px;
          justify-content: flex-end;
        }

        .tutorial-btn {
          padding: 10px 24px;
          border: none;
          border-radius: 8px;
          font-size: 14px;
          font-weight: 600;
          cursor: pointer;
          transition: all 0.2s ease;
        }

        .tutorial-btn-primary {
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: white;
          box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        }

        .tutorial-btn-primary:hover {
          transform: translateY(-1px);
          box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

        .tutorial-btn-secondary {
          background: white;
          color: #667eea;
          border: 2px solid #667eea;
        }

        .tutorial-btn-secondary:hover {
          background: #f8f9ff;
        }

        .tutorial-btn-skip {
          background: transparent;
          color: #999;
          border: 1px solid #ddd;
        }

        .tutorial-btn-skip:hover {
          background: #f5f5f5;
          color: #666;
        }
      `}</style>

      <style jsx global>{`
        .tutorial-highlight {
          position: relative;
          z-index: 9998;
          box-shadow: 0 0 0 4px #667eea, 0 0 24px rgba(102, 126, 234, 0.6);
          border-radius: 6px;
          animation: tutorial-pulse 2s infinite;
        }

        @keyframes tutorial-pulse {
          0% {
            box-shadow: 0 0 0 4px #667eea, 0 0 24px rgba(102, 126, 234, 0.6);
          }
          50% {
            box-shadow: 0 0 0 6px #667eea, 0 0 32px rgba(102, 126, 234, 0.8);
          }
          100% {
            box-shadow: 0 0 0 4px #667eea, 0 0 24px rgba(102, 126, 234, 0.6);
          }
        }
      `}</style>
    </>
  );
}